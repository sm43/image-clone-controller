apiVersion: apps/v1
kind: Deployment
metadata:
  name: image-clone-controller
  namespace: image-clone-controller
  labels:
    app.kubernetes.io/part-of: image-clone-controller
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: controller
      app.kubernetes.io/part-of: image-clone-controller
  template:
    metadata:
      labels:
        app.kubernetes.io/name: controller
        app.kubernetes.io/part-of: image-clone-controller
    spec:
      serviceAccountName: image-clone-controller
      containers:
      - name: controller
        image: "ko://github.com/sm43/image-clone-controller/cmd/image-clone-controller"
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        env:
          - name: SYSTEM_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: REGISTRY_NAME
            valueFrom:
              secretKeyRef:
                key: REGISTRY_NAME
                name: backup-registry-credentials
          - name: REPOSITORY_NAME
            valueFrom:
              secretKeyRef:
                key: REPOSITORY_NAME
                name: backup-registry-credentials
          - name: REGISTRY_USERNAME
            valueFrom:
              secretKeyRef:
                key: REGISTRY_USERNAME
                name: backup-registry-credentials
          - name: REGISTRY_PASSWORD
            valueFrom:
              secretKeyRef:
                key: REGISTRY_PASSWORD
                name: backup-registry-credentials
        securityContext:
          allowPrivilegeEscalation: false
